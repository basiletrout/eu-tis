# Rule 1: Detect all the GET requests (to delete just for test) (3 alerts for 4 requests)
alert tcp $ANY_ADDRESS any -> $DLINK_ADDR 80 (
    msg: "HTTP GET request detected (General Detection)";
    reference:cve,2025-4883;
    reference:url,https://github.com/TroutSoftware/eu-tis/issues/14;
    flow: to_server, established;
    content: "GET ";
    sid: 488301;
    rev: 1;
)

# Rule 2: Detect the GET requests with payload > 150 bytes (2 alerts for the 3 last requests)
alert tcp $ANY_ADDRESS any -> $DLINK_ADDR 80 (
    msg: "HTTP BUFFER OVERFLOW - GET request payload > 150 bytes";
    reference:cve,2025-4883;
    reference:url,https://github.com/TroutSoftware/eu-tis/issues/14;
    flow: to_server, established;
    content: "GET ";
    dsize: >150;
    classtype: D-Link_DI-8100--activity;
    sid: 488302;
    rev: 1;
)



# Rule 3: Detect HTTP requests with very long URI patterns that could cause buffer overflow
alert tcp $ANY_ADDRESS any -> $DLINK_ADDR 80 (
    msg: "HTTP BUFFER OVERFLOW - Very long URI detected (>150 chars)";
    reference:cve,2025-4883;
    reference:url,https://github.com/TroutSoftware/eu-tis/issues/14;
    flow: to_server, established;
    pcre: "/GET\s+\/[^ \r\n]{150,}/smi";
    classtype: D-Link_DI-8100--activity;
    sid: 488303;
    rev: 1;
)

# Rule 4: Detect any connection to vulnerable endpoint
alert tcp $ANY_ADDRESS any -> $DLINK_ADDR 80 (
    msg: "HTTP BUFFER OVERFLOW - Access to vulnerable endpoint detected";
    reference:cve,2025-4883;
    reference:url,https://github.com/TroutSoftware/eu-tis/issues/14;
    flow: to_server, established;
    content: "/ctxz.asp?def=";
    classtype: D-Link_DI-8100--activity;
    sid: 488304;
    rev: 1;
)
